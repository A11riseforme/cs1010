/**
 * CS1010 Semester 1 AY18/19
 * Assignment 4: Mastermind
 *
 * @file: mastermind.c
 * @author: YANG CHENGLONG (Group 01)
 */
#include "cs1010.h"
#include <string.h>

int main() {
    // truth is the correct answer from user's input.
    char *truth = cs1010_read_word();
    /** 
     * c_and_p_count is the number of chars guessing appear
     * in the correct position and correct color.
     */
    long c_and_p_count;
    /**
     * c_not_p_count is the number of chars guessing appear
     * in the correct color but wrong position.
     */
    long c_not_p_count;
    /**
     * appear_count is the number of correct chars guessing
     * which is the correct color. Initialize to 0 first.
     * clearly, appear_count = c_and_p_count + c_not_p_count.
     */
    long appear_count = 0;
    // truth_copy is a copy of truth, it will be manipulated later.
    char truth_copy[4];
    // guess is guessing from user's input.
    char *guess;
    do {
        // make a copy of truth, to be manipulated later.
        strcpy(truth_copy, truth);
        // read from user's input and store into guess
        guess = cs1010_read_word();
        // initialize c_and_p_count and c_not_p_count to 0.
        c_and_p_count = 0;
        c_not_p_count = 0;
        /** 
         * count the number of guessings which is correct
         * in both colors and positions.
         */
        for (int i = 0; i < 4; i += 1) {
            if (truth_copy[i] == guess[i] ) {
                c_and_p_count += 1;
            }
        }
        /**
         * count the number of guessing which is correct
         * in color regardless of position.
         * once a char from guess is found in truth_copy
         * reset that char to '0' to avoid double counting.
         */
        for (int i = 0; i < 4; i += 1) {
            for (int j = 0; j < 4; j += 1) {
                if ((guess[j] == truth_copy[i]) && (guess[j] != 0) && (truth_copy[i] != 0)) {
                    appear_count += 1;
                    guess[j] = '0';
                    truth_copy[i] = '0';
                    break;
                }
            }
        }
        free(guess);
        c_not_p_count = appear_count - c_and_p_count;
        cs1010_print_long(c_and_p_count);
        cs1010_print_string(" ");
        cs1010_println_long(c_not_p_count);
      /**
       * stopping condition is when (c_and_p_count == 4) && (c_not_p_count == 0)
       * continue condition is just to negate the above.
       */
    } while (c_and_p_count != 4 || c_not_p_count != 0);
}
